- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    namespace: vault
    name: vault-get-unseal
  rules:
  - apiGroups:
    - extensions
    - apps
    resources:
    - secrets
    verbs:
    - 'patch'
    - 'get'

- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    name: vault-get-unseal
    namespace: vault
  subjects:
  - kind: ServiceAccount
    name: vault-backup-serviceaccount
    namespace: vault
  roleRef:
    kind: Role
    name: vault-get-unseal
    apiGroup: ""

- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    labels:
      app: "vault-get-unseal"
    name: "vault-get-unseal"
  spec:
    schedule: "0 0 */1 * *"
    ConcurrencyPolicy: Forbid
    successfulJobsHistoryLimit: 3
    failedJobsHistoryLimit: 1
    jobTemplate:
      spec:
        restartPolicy: OnFailure
         serviceAccountName: vault-backup-serviceaccount
         containers:
          - command:
            - /bin/sh
            - -c
            - |-
              OLD_TOKEN=(oc get secret vault-unsealer -o go-template  --template="{{.data.VAULT_TOKEN}}" | base64 -d -)
              NEW_TOKEN=(curl X-Vault Token=${{ OLD_TOKEN }} TOKENCREATECOMMAND with -orphan flag! or )
                  cat <<EOF | oc apply -f -
              apiVersion: v1
                kind: Secret
                  type: Opaque
                metadata:
                  name: vault-unsealer
                  namespace: vault
                data:
                  VAULT_TOKEN: ${{ NEW_TOKEN }}
              EOF

